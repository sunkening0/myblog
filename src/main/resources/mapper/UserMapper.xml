<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skn.MyBlog.repository.UserMapper">
	<resultMap id="BaseResultMap" type="com.skn.MyBlog.domain.User">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="avatar" jdbcType="VARCHAR" property="avatar" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<!-- <collection property="authority" ofType="com.skn.MyBlog.domain.Authority" column="id">
			<id column="aid" property="id" />这里的column对应的是下面查询的别名，而不是表字段名
			<result column="aname" property="name" />property对应JavaBean中的属性名
		</collection> -->
		<collection property="authorities" ofType="com.skn.MyBlog.domain.Authority" select="getAuthority" column="id">
		</collection>
	</resultMap>

	<sql id="Base_Column_List">
		id, avatar, email, name, password, username
	</sql>

	<select id="selectById" parameterType="com.skn.MyBlog.domain.User"
		resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from user
		where id = #{user.id,jdbcType=BIGINT}
	</select>
	
	<select id="selectByName" parameterType="com.skn.MyBlog.domain.User"
		resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from user
		where username = #{user.username,jdbcType=VARCHAR}
	</select>
	
	
	<select id="findAll"
		resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from user
	</select>
	
	
	<select id="findByNameLike" parameterType="string"
		resultMap="BaseResultMap">
		select <include refid="Base_Column_List" />
		from user
		where username like #{username,jdbcType=VARCHAR}
	</select>
	
	<select id="getAuthority" 
		resultType="com.skn.MyBlog.domain.Authority">
		select a.id,a.name
		from authority a left join user_authority b on a.id = b.authority_id
		where  
		1=1 and b.user_id = #{id,jdbcType=BIGINT}

	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user
		where id = #{id,jdbcType=BIGINT}
	</delete>


<select id="findByUsernames" resultType="com.skn.MyBlog.domain.User">
      SELECT *
      FROM  user
    <if test="_parameter != null">
      WHERE username in 
         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
             #{item}  
           </foreach>  
      </if>
  </select>
  
  <insert id="insert" parameterType="com.skn.MyBlog.domain.User" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  <update id="updateByPrimaryKey" parameterType="com.skn.MyBlog.domain.User" >
    update user
    <set >
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id = "insertUserAuthority">
  	insert into user_authority(user_id,authority_id) values(#{userId,jdbcType=BIGINT},#{authorityId,jdbcType=BIGINT})
  </insert>
  
 <delete id = "deleteUserAuthority">
  	delete from user_authority where user_id = #{id,jdbcType=BIGINT}
  </delete>

</mapper>